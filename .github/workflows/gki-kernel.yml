name: GhostSP build Kernel
 
  
on: 
  workflow_call:
     inputs:
      version:
        required: true
        type: string
        description: >
          Output directory of gki,
          for example: android12-5.10
      version_name:
        required: true
        type: string
        description: >
          With SUBLEVEL of kernel,
          for example: android12-5.10.66
      tag:
        required: true
        type: string
        description: >
          Part of branch name of common kernel manifest,
          for example: android12-5.10-2021-11
      os_patch_level:
        required: false
        type: string
        description: >
          Patch level of common kernel manifest,
          for example: 2021-11
        default: 2022-05
      patch_path:
        required: true
        type: string
        description: >
          Directory name of .github/patches/<patch_path>
          for example: 5.10
      use_cache:
        required: false
        type: boolean
        default: true
      embed_ksud:
        required: false
        type: string
        default: ksud-aarch64-linux-android
        description: >
          Artifact name of prebuilt ksud to be embedded
          for example: ksud-aarch64-linux-android
      debug:
        required: false
        type: boolean
        default: false
     secrets:
      BOOT_SIGN_KEY:
        required: false
      CHAT_ID:
        required: false
      BOT_TOKEN:
        required: false
      MESSAGE_THREAD_ID: 
        required: false
        
      
jobs:
  build:
    name: Build my artifact
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
      - name: Checkout
        uses: actions/checkout@v3
          

      - name: Setup need_upload
        id: need_upload
        run: |
         echo "Free space:"
          df -h
          if [ ! -z "${{ secrets.BOT_TOKEN }}" ]; then
            echo "UPLOAD=true" >> $GITHUB_OUTPUT
          else
            echo "UPLOAD=false" >> $GITHUB_OUTPUT
          fi
          
      - name: Setup kernel source
        run: |
          echo "Free space:"
          df -h
          cd $GITHUB_WORKSPACE
          sudo apt-get install repo -y
          mkdir android-kernel && cd android-kernel
          repo init -u https://android.googlesource.com/kernel/manifest -b common-android12-5.10    
          repo sync -j$(nproc --all) --no-tags
          df -h
          rm -rf common
          ls
          cd $GITHUB_WORKSPACE/android-kernel

      - name: download source kernel
        run: | 
           cd $GITHUB_WORKSPACE/android-kernel
           git clone https://github.com/ramabondanp/android_kernel_common-5.10.git -b android12-5.10 common
           cd $GITHUB_WORKSPACE/android-kernel
           
      - name: download clang 21
        run: | 
            cd $GITHUB_WORKSPACE/android-kernel/prebuilts-master/clang/host/linux-x86
            mkdir -p clang-r547379 && cd clang-r547379
            wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r547379.tar.gz
            tar -xvzf clang-r547379.tar.gz
            cd $GITHUB_WORKSPACE/android-kernel

      - name: edit file untuk clang 21
        run: | 
            cd $GITHUB_WORKSPACE/android-kernel/common
            sed -i 's|CLANG_PREBUILT_BIN=prebuilts-master/clang/host/linux-x86/clang-r563880b/bin|CLANG_PREBUILT_BIN=prebuilts-master/clang/host/linux-x86/clang-r547379/bin|' build.config.common
            cd $GITHUB_WORKSPACE/android-kernel

      - name: edit defconfig
        run: | 
            cd $GITHUB_WORKSPACE/android-kernel/common/arch/arm64/configs
            echo 'CONFIG_KSU=y' >> gki_defconfig
            echo 'CONFIG_KPM=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_SUS_SU=n' >> gki_defconfig
            echo 'CONFIG_KSU_MANUAL_HOOK=y' >> gki_defconfig
            echo 'CONFIG_KSU_KPROBES_HOOK=n' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_SUS_PATH=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_SUS_MOUNT=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSU_DEFAULT_MOUNT=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_AUTO_ADD_SUS_BIND_MOUNT=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_SUS_KSTAT=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_SUS_OVERLAYFS=n' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_TRY_UMOUNT=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_AUTO_ADD_TRY_UMOUNT_FOR_BIND_MOUNT=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_SPOOF_UNAME=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_ENABLE_LOG=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_HIDE_KSU_SUSFS_SYMBOLS=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_SPOOF_CMDLINE_OR_BOOTCONFIG=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_OPEN_REDIRECT=y' >> gki_defconfig
            echo 'CONFIG_TMPFS_XATTR=y' >> gki_defconfig
            echo 'CONFIG_TMPFS_POSIX_ACL=y' >> gki_defconfig
            # Memori
            echo 'CONFIG_ZRAM=y' >> gki_defconfig
            echo 'CONFIG_ZRAM_LZ4_COMPRESS=y' >> gki_defconfig
            echo 'CONFIG_ZRAM_LZ4HC_COMPRESS=y' >> gki_defconfig
            echo 'CONFIG_ZRAM_ZSTD_COMPRESS=y' >> gki_defconfig
            echo 'CONFIG_ZRAM_WRITEBACK=y' >> gki_defconfig
            echo 'CONFIG_ZSWAP=y' >> gki_defconfig
            echo 'CONFIG_ZSWAP_COMPRESSOR_LZO=y' >> gki_defconfig
            echo 'CONFIG_ZSWAP_COMPRESSOR_LZ4=y' >> gki_defconfig
            echo 'CONFIG_ZSWAP_COMPRESSOR_ZSTD=y' >> gki_defconfig
            echo 'CONFIG_ZSWAP_COMPRESSOR_DEFAULT_LZ4=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_SUS_KSTAT_SPOOF_GENERIC=y' >> gki_defconfig
            echo 'CONFIG_KSU_SUSFS_AUTO_ADD_SUS_KSTAT=y' >> gki_defconfig
            #set local version and desibel localversion auto
            echo 'CONFIG_LOCALVERSION="-GhostSP-SukiSUxSUSFS"' >> gki_defconfig
            echo 'CONFIG_LOCALVERSION_AUTO=n' >> gki_defconfig
            cd $GITHUB_WORKSPACE/android-kernel

      - name: DOWNLOAD dan setup sukisu
        run: | 
            # ---------- 6/13 Patch Sources ----------
            echo "[6/13] Cloning & applying patches..."
            git clone https://github.com/ShirkNeko/SukiSU_patch.git
            cd common
            curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s susfs-main
            git clone https://gitlab.com/simonpunk/susfs4ksu/ -b gki-android12-5.10 ../sus
            cp -r ../sus/kernel_patches/fs . && cp -r ../sus/kernel_patches/include . && cp ../sus/kernel_patches/50_add_susfs_in_gki-android12-5.10.patch .
            patch -p1 < 50_add_susfs_in_gki-android12-5.10.patch
            cp ../SukiSU_patch/hooks/syscall_hooks.patch ./ && patch -p1 -F 3 < syscall_hooks.patch
            cp ../SukiSU_patch/69_hide_stuff.patch ./ && patch -p1 -F 3 < 69_hide_stuff.patch
            cd $GITHUB_WORKSPACE/android-kernel
            
      - name: dalate post chek defconfig
        run: | 
            cd $GITHUB_WORKSPACE/android-kernel/common
            sed -i '/^POST_DEFCONFIG_CMDS="check_defconfig"$/d' build.config.gki
            cd $GITHUB_WORKSPACE/android-kernel
            
      - name: Setup ccache
        if: inputs.use_cache == true
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: gki-kernel-aarch64-${{ inputs.version_name }}
          max-size: 32G
          save: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Build boot.img
        working-directory: android-kernel
        run: |
          # Ekspor PATH untuk sesi ini (diagnostik awal)
          export PATH="$CLANG_PATH/bin:$PATH"
          export CC="ccache clang"
          echo "âœ… Host Clang visible now: $(clang --version | head -n 1)"
          
          if [ -e build/build.sh ]; then
            LTO=thin BUILD_CONFIG=common/build.config.gki.aarch64 build/build.sh
          else
            tools/bazel run --disk_cache=/home/runner/.cache/bazel --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist
          fi

      - name: Prepare artifacts
        id: prepareArtifacts
        run: |
          OUTDIR=android-kernel/out/android12-5.10/dist
          if [ ! -e $OUTDIR ]; then
            OUTDIR=android-kernel/out/android12-5.10/dist
          fi
          mkdir output
          cp $OUTDIR/Image ./output/
          git clone https://github.com/Kernel-SU/AnyKernel3
          rm -rf ./AnyKernel3/*
          cp $OUTDIR/* ./AnyKernel3/

      - name: Upload Image and Image.gz
        uses: actions/upload-artifact@v4
        with:
          name: Image-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./output/*

      - name: Upload AnyKernel3
        uses: actions/upload-artifact@v4
        with:
          name: AnyKernel3-${{ inputs.version_name }}_${{ inputs.os_patch_level }}
          path: ./AnyKernel3/*
          
